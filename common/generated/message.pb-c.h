/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _EchoData EchoData;
typedef struct _MoveData MoveData;
typedef struct _ChatData ChatData;
typedef struct _Message Message;


/* --- enums --- */

/*
 * 요청 종류 (op 코드)
 */
typedef enum _OpCode {
  OP_CODE__PING = 0,
  OP_CODE__ECHO_MSG = 1,
  OP_CODE__MOVE = 2,
  OP_CODE__CHAT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(OP_CODE)
} OpCode;

/* --- messages --- */

/*
 * 디버그용 echo 메시지 데이터 구조체
 */
struct  _EchoData
{
  ProtobufCMessage base;
  /*
   * 메시지 내용
   */
  char *msg;
};
#define ECHO_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&echo_data__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 기물 옮김 데이터 구조체
 */
struct  _MoveData
{
  ProtobufCMessage base;
  /*
   * 옮길 대상 기물 위치 (예: "a2")
   */
  char *target;
  /*
   * 옮길 새 위치 (예: "a3")
   */
  char *dest;
};
#define MOVE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&move_data__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * 채팅 메시지 데이터 구조체
 */
struct  _ChatData
{
  ProtobufCMessage base;
  /*
   * 채팅 메시지 내용
   */
  char *msg;
};
#define CHAT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat_data__descriptor) \
    , (char *)protobuf_c_empty_string }


typedef enum {
  MESSAGE__DATA__NOT_SET = 0,
  MESSAGE__DATA_ECHO = 2,
  MESSAGE__DATA_MOVE = 3,
  MESSAGE__DATA_CHAT = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MESSAGE__DATA)
} Message__DataCase;

/*
 * 메시지 구조체 (확장 가능)
 */
struct  _Message
{
  ProtobufCMessage base;
  OpCode op;
  Message__DataCase data_case;
  union {
    EchoData *echo;
    MoveData *move;
    /*
     * 다른 데이터 구조체 추가 가능
     */
    ChatData *chat;
  };
};
#define MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message__descriptor) \
    , OP_CODE__PING, MESSAGE__DATA__NOT_SET, {0} }


/* EchoData methods */
void   echo_data__init
                     (EchoData         *message);
size_t echo_data__get_packed_size
                     (const EchoData   *message);
size_t echo_data__pack
                     (const EchoData   *message,
                      uint8_t             *out);
size_t echo_data__pack_to_buffer
                     (const EchoData   *message,
                      ProtobufCBuffer     *buffer);
EchoData *
       echo_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   echo_data__free_unpacked
                     (EchoData *message,
                      ProtobufCAllocator *allocator);
/* MoveData methods */
void   move_data__init
                     (MoveData         *message);
size_t move_data__get_packed_size
                     (const MoveData   *message);
size_t move_data__pack
                     (const MoveData   *message,
                      uint8_t             *out);
size_t move_data__pack_to_buffer
                     (const MoveData   *message,
                      ProtobufCBuffer     *buffer);
MoveData *
       move_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   move_data__free_unpacked
                     (MoveData *message,
                      ProtobufCAllocator *allocator);
/* ChatData methods */
void   chat_data__init
                     (ChatData         *message);
size_t chat_data__get_packed_size
                     (const ChatData   *message);
size_t chat_data__pack
                     (const ChatData   *message,
                      uint8_t             *out);
size_t chat_data__pack_to_buffer
                     (const ChatData   *message,
                      ProtobufCBuffer     *buffer);
ChatData *
       chat_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat_data__free_unpacked
                     (ChatData *message,
                      ProtobufCAllocator *allocator);
/* Message methods */
void   message__init
                     (Message         *message);
size_t message__get_packed_size
                     (const Message   *message);
size_t message__pack
                     (const Message   *message,
                      uint8_t             *out);
size_t message__pack_to_buffer
                     (const Message   *message,
                      ProtobufCBuffer     *buffer);
Message *
       message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message__free_unpacked
                     (Message *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*EchoData_Closure)
                 (const EchoData *message,
                  void *closure_data);
typedef void (*MoveData_Closure)
                 (const MoveData *message,
                  void *closure_data);
typedef void (*ChatData_Closure)
                 (const ChatData *message,
                  void *closure_data);
typedef void (*Message_Closure)
                 (const Message *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    op_code__descriptor;
extern const ProtobufCMessageDescriptor echo_data__descriptor;
extern const ProtobufCMessageDescriptor move_data__descriptor;
extern const ProtobufCMessageDescriptor chat_data__descriptor;
extern const ProtobufCMessageDescriptor message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
